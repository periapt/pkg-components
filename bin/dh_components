#!/usr/bin/perl
use strict;
use warnings;
use Debian::Debhelper::Dh_Lib;
use Debian::Debhelper::Dh_components;

init();

foreach my $package (getpackages()) {

    my $dir = find_components_dir($package);
    next if !$dir;

    my $components = Debian::Debhelper::Dh_components->new($dir, $package);
    my @build_stages = $components->build_stages;

    foreach my $c ($components->components) {
        foreach my $bs (@build_stages) {
            verbose_print("$bs: $c\[$package\]");
        }
    }
}

exit(0);

sub find_components_dir {
    my $package = shift;

    my $dir = "debian/$package.components";
    return $dir if -d $dir;

    $dir = "debian/components";
    return $dir if -d $dir && $package eq $dh{FIRSTPACKAGE};

    return;
}

=head1 NAME

dh_components - build additional components

=head1 SYNOPSIS

B<dh_components> [S<I<debhelper options>>]

=head1 DESCRIPTION

C<dh_components> is a debhelper program that is responsible for handling
additional components that come from separate upstream sources.

=head1 FILES

=over 4

=item debian/I<package>.components

=item debian/components

These directories contain all the component data for a given binary package.
The second form only works for the first binary in a source package and is
overridden by the equivalent first form.

=item debian/components/I<component>

This is a directory that contains the files specific to that component.
In some ways it is like a cut-down version of the debian directoty.

=back

=head1 CONFIGURATION

To enable this module it is necessary to pass the argument
C<--with components> to the C<dh> programa in the C<debian/rules>
file.

=head1 SEE ALSO

L<debhelper(1)>

This program is used with debhelper. 

L<quilt(1)>

=head1 AUTHOR

Nicholas Bamber <nicholas@periapt.co.uk>

=cut
